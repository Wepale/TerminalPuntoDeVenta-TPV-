#BlueJ class context
comment0.params=producto
comment0.target=NuevoProductoGenerico(Modelo.Productos.ProductoBase)
comment0.text=\r\n\ Como\ est\u00E1\ clase\ extiende\ de\ JPanel,\ el\ contructor\ se\ crear\u00E1\ as\u00ED\ mismo\ y\ har\u00E1\ uso\ del\ m\u00E9todo\ privado\ contruirPanel(JPanel,ProductoBase)\ para\r\n\ introducir\ en\ si\ mismo\ los\ JTextField\r\n\ \r\n\ @param\ producto\ Si\ es\ null,\ indica\ que\ se\ est\u00E1\ creando\ un\ producto\ nuevo.\ Si\ es\ un\ objeto\ de\ la\ clase\ ProductoBase\ o\ sus\ clases\ hijas,\ se\ modificar\u00E1\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ dicho\ producto.\r\n
comment1.params=panel\ producto
comment1.target=void\ construirPanel(javax.swing.JPanel,\ Modelo.Productos.ProductoBase)
comment1.text=\r\n\ Est\u00E9\ m\u00E9todo\ crea\ los\ JTextField\ para\ que\ el\ usuario\ pueda\ introducir\ los\ datos\ del\ producto\ a\ crear\ o\ modificar.\r\n\ \r\n\ @param\ panel\ El\ panel\ donde\ se\ van\ a\ introducir\ los\ JTextField\r\n\ @param\ producto\ Si\ es\ null,\ indica\ que\ se\ est\u00E1\ creando\ un\ producto\ nuevo.\ Si\ es\ un\ objeto\ de\ la\ clase\ ProductoBase\ o\ sus\ clases\ hijas,\ se\ modificar\u00E1\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ dicho\ producto.\r\n
comment2.params=inventario\ producto
comment2.target=int\ obtenerDatos(Modelo.Contenedores.ContenedorProductos,\ Modelo.Productos.ProductoBase)
comment2.text=\r\n\ Est\u00E9\ m\u00E9todo\ leer\u00E1\ y\ comprobar\u00E1\ que\ los\ datos\ introducidos\ en\ los\ JTextField\ sean\ correctos.\r\n\ \r\n\ @param\ inventario\ El\ luegar\ en\ el\ que\ se\ almacenan\ todos\ los\ productos\r\n\ @param\ producto\ Si\ es\ null,\ indica\ que\ se\ est\u00E1\ creando\ un\ producto\ nuevo.\ Si\ es\ un\ objeto\ de\ la\ clase\ ProductoBase\ o\ sus\ clases\ hijas,\ se\ modificar\u00E1\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ dicho\ producto.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ @return\ 0\ si\ al\ c\u00F3digo\ ya\ pertenece\ a\ otro\ producto,\ 1\ si\ el\ c\u00F3digo\ es\ una\ cadena\ vacia,\ 2\ si\ el\ precio/iva/stock\ no\ son\ valores\ n\u00FAmericos,\ 3\r\n\ \ \ \ \ \ \ \ \ \ si\ todos\ los\ datos\ son\ correctos\r\n
comment3.params=inventario\ producto
comment3.target=void\ crearProducto(Modelo.Contenedores.ContenedorProductos,\ Modelo.Productos.ProductoBase)
comment3.text=\r\n\ Est\u00E9\ m\u00E9todo\ recoger\u00E1\ todos\ los\ datos\ introducidos\ en\ los\ JTextField\ y\ crear\u00E1/modificar\u00E1\ el\ producto\ con\ dichos\ datos.\r\n\ \r\n\ ATENCION\:\ Este\ m\u00E9todo\ no\ comprueba\ que\ los\ datos\ introducidos\ con\ correctos,\ por\ lo\ que\ nos\ podr\u00EDa\ dar\ errores\ en\ tiempo\ de\ ejecuci\u00F3n,\r\n\ por\ ello\ hay\ que\ hacer\ uso\ del\ metodo\ obtenerDatos(...,...)\ y\ solo\ invocar\ a\ este\ m\u00E9todo\ cuando\ nos\ aseguremos\ que\ los\ datos\ no\ tienen\ nig\u00FAn\ error\r\n\ y\ son\ completamente\ v\u00E1lidos\r\n\ \r\n\ @param\ inventario\ El\ lugar\ donde\ se\ alamcenan\ todos\ los\ productos\r\n\ @param\ producto\ Si\ es\ null,\ indica\ que\ se\ est\u00E1\ creando\ un\ producto\ nuevo.\ Si\ es\ un\ objeto\ de\ la\ clase\ ProductoBase\ o\ sus\ clases\ hijas,\ se\ modificar\u00E1\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ dicho\ producto.\r\n
numComments=4
