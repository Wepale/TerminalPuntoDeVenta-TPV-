#BlueJ class context
comment0.params=
comment0.target=ContenedorFacturas()
comment0.text=\r\n\ Crea\ un\ archivador\ vacio\ en\ el\ que\ almacenar\ las\ facturas\r\n
comment1.params=otroArchivador
comment1.target=ContenedorFacturas(ContenedorFacturas)
comment1.text=\r\n\ Crea\ un\ nuevo\ ContendorFacturas\ copiando\ las\ facturas\ que\ contiene\ otro\ ContendorFacturas\r\n\ \r\n\ @param\ otroArchivador\ El\ objeto\ ContenedorFacturas\ que\ se\ desea\ copiar\r\n
comment2.params=
comment2.target=java.util.ArrayList\ getArchivador()
comment2.text=\r\n\ M\u00E9todo\ para\ acceder\ al\ archivador\r\n\ \r\n\ @return\ \ \ \ \ \ El\ campo\ archivador(El\ ArrayList)\r\n
comment3.params=
comment3.target=boolean\ estaVacio()
comment3.text=\r\n\ M\u00E9todo\ para\ saber\ si\ el\ archivador\ de\ facturas\ est\u00E1\ vacio\r\n\ \r\n\ @return\ true\ si\ esta\ vacio,\ false\ en\ caso\ contrario\r\n
comment4.params=factura
comment4.target=void\ insertarFactura(Modelo.Ventas.Factura)
comment4.text=\r\n\ M\u00E9todo\ para\ a\u00F1adir\ una\ factura\ al\ archivador\r\n\ \r\n\ @param\ \ \ Factura\ \ \ La\ factura\ a\ a\u00F1adir\r\n
comment5.params=codigo
comment5.target=Modelo.Ventas.Factura\ buscarPorCodigo(java.lang.String)
comment5.text=\r\n\ M\u00E9todo\ para\ buscar\ una\ factura\ por\ su\ codigo\r\n\ \r\n\ @param\ \ \ String\ codigo\ \ \ El\ c\u00F3digo\ que\ buscaremos\r\n\ \r\n\ @return\ la\ factura\ con\ dicho\ codigo,\ null\ si\ no\ existe\r\n
comment6.params=codigoFactura
comment6.target=boolean\ existeFactura(java.lang.String)
comment6.text=\r\n\ M\u00E9todo\ para\ saber\ si\ existe\ una\ factura\ mediante\ su\ codigo\r\n\ \r\n\ @param\ codigoFactura\ el\ c\u00F3digo\ de\ la\ factura\ que\ se\ quiere\ buscar\r\n\ \r\n\ @return\ true\ si\ en\ el\ archivador\ existe\ un\ ticket\ con\ dicho\ codigo,\ false\ en\ caso\ contrario\r\n
comment7.params=codigoCliente
comment7.target=boolean\ existeFacturaCliente(java.lang.String)
comment7.text=\r\n\ Metodo\ para\ saber\ si\ existe\ una\ factura\ asociada\ a\ un\ Cliente\r\n\ \r\n\ @param\ codigoCliente\ El\ c\u00F3digo\ del\ cliente\r\n\ \r\n\ @return\ true\ si\ existe\ una\ factura\ asociada\ a\ dicho\ cliente,\ false\ en\ caso\ contrario\r\n
comment8.params=nombre
comment8.target=ContenedorFacturas\ buscarPorNombre(java.lang.String)
comment8.text=\r\n\ M\u00E9todo\ que\ devuelve\ todas\ las\ facturas\ cuyo\ nombre/raz\u00F3n\ social\ del\ cliente\ coincida\ con\ el\ introducido\ como\ parametro\r\n\ \r\n\ @param\ nombre\ El\ nombre/razon\ social\ que\ se\ desea\ buscar\r\n\ \r\n\ @return\ ContenedorFacturas\ con\ las\ facturas\ que\ coincidan,\ null\ si\ no\ existe\ ninguna\ factura\r\n
comment9.params=codigo
comment9.target=ContenedorFacturas\ buscarPorCodigoCliente(java.lang.String)
comment9.text=\r\n\ M\u00E9todo\ que\ devulve\ todas\ las\ facturas\ de\ un\ cliente\ introduciendo\ el\ c\u00F3digo\ del\ cliente\r\n\ \r\n\ @param\ codigo\ el\ codigo\ del\ cliente\r\n\ \r\n\ @return\ ContendorFacturas\ con\ todas\ las\ facturas\ de\ dicho\ cliente,\ null\ si\ no\ exite\ ninguna\ factura\r\n
numComments=10
