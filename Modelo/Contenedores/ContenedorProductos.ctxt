#BlueJ class context
comment0.params=
comment0.target=ContenedorProductos()
comment0.text=\r\n\ Creara\ un\ contenedor\ de\ productos(ArrayList)\ vacio.\r\n
comment1.params=otroContenedor
comment1.target=ContenedorProductos(ContenedorProductos)
comment1.text=\r\n\ Crea\ una\ nueva\ instancia\ de\ ContenedorProductos\ copiando\ los\ productos\ que\ haya\ en\ otra\ intancia\ de\ ContenedorProductos.\r\n\ Los\ productos\ que\ contenga\ el\ ContenedorProductos\ que\ pasamos\ como\ parametro\ tambi\u00E9n\ seran\ copias\ completamente\ nuevas\r\n\ \r\n\ @param\ otroContenedor\ la\ instancia\ de\ ContenedorProductos\ al\ que\ se\ le\ realizar\u00E1\ la\ copia\r\n
comment10.params=buscarCadena
comment10.target=ContenedorProductos\ buscarDescripcion(java.lang.String)
comment10.text=\r\n\ M\u00E9todo\ que\ busca\ un\ producto\ en\ el\ almac\u00E9n\ por\ su\ DESCRIPCI\u00D3N.\r\n\ \r\n\ Para\ que\ una\ busqueda\ tenga\ \u00E9xito,\ todas\ y\ cada\ una\ de\ las\ palabras\ introducidas\ deben\ aparecer\ en\ la\ descripci\u00F3n\r\n\ \r\n\ @param\ \ \ String\ \ \ \ \ \ La\ cadena\ que\ se\ quiere\ comparar\ con\ la\ descripci\u00F3n\r\n\ \r\n\ @return\ \ Un\ ContenedorProductos\ con\ todos\ los\ productos\ que\ hallan\ tenido\ coincidencia,\ null\ si\ no\ se\ ha\ encontrado\ ning\u00FAn\ producto\r\n
comment11.params=buscarTalla
comment11.target=ContenedorProductos\ buscarTalla(java.lang.String)
comment11.text=\r\n\ M\u00E9todo\ que\ busca\ un\ producto\ en\ el\ deposito\ por\ su\ TALLA.\ \r\n\ \r\n\ Introduciendo\ distintas\ tallas,\ separadas\ cada\ una\ de\ ellas\ por\ al\ menos\ un\ espacio,\ se\ devolver\u00E1n\ todos\ los\ productos\ que\ coincidan\ con\ las\ tallas\r\n\ introducidas.\r\n\ \r\n\ @param\ \ \ String\ \ \ \ \ \ La\ cadena\ que\ contendr\u00E1\ todas\ las\ tallas\ con\ las\ que\ se\ quieren\ encontrar\ coincidencias\r\n\ \r\n\ @return\ \ Un\ ContenedorProductos\ con\ todos\ los\ productos\ que\ hallan\ tenido\ coincidencia,\ null\ si\ no\ se\ ha\ encontrado\ ning\u00FAn\ producto\r\n
comment12.params=
comment12.target=void\ resetearStock()
comment12.text=\r\n\ Est\u00E9\ m\u00E9todo\ restaurar\u00E1\ el\ stock\ en\ el\ inventario\ de\ los\ productos\ que\ se\ hayan\ a\u00F1adido\ al\ ticket.\r\n\ Se\ utilizar\u00E1\ cuando\ la\ venta\ se\ cancele\ por\ alg\u00FAn\ motivo.\r\n
comment13.params=
comment13.target=void\ resetearVendido()
comment13.text=\r\n\ Este\ m\u00E9todo\ restaur\u00E1\ las\ unidades\ vendidas\ de\ un\ producto\ para\ dejarlas\ de\ nuevo\ a\ 0.\r\n\ Se\ utilizar\u00E1\ cuando\ se\ confirme\ o\ se\ cancele\ una\ venta.\r\n
comment2.params=
comment2.target=java.util.ArrayList\ getContenedor()
comment2.text=\r\n\ Metodo\ que\ utilizaremos\ para\ tener\ acceso\ al\ deposito\r\n\r\n\ @return\ \ deposito\ El\ ArrayList\ que\ contiene\ los\ productos\r\n
comment3.params=
comment3.target=boolean\ estaVacio()
comment3.text=\r\n\ M\u00E9todo\ que\ utilizaremos\ para\ saber\ si\ el\ contendor\ de\ productos\ est\u00E1\ vacio\r\n\ \r\n\ @return\ \ true\ si\ est\u00E1\ vacio,\ false\ en\ caso\ contrario\r\n
comment4.params=producto
comment4.target=void\ insertarProducto(Modelo.Productos.ProductoBase)
comment4.text=\r\n\ M\u00E9todo\ para\ a\u00F1adir\ un\ producto\ al\ deposito\r\n\ \r\n\ @param\ \ producto\ \ El\ producto\ a\ a\u00F1adir\r\n
comment5.params=producto
comment5.target=void\ eliminarProducto(Modelo.Productos.ProductoBase)
comment5.text=\r\n\ M\u00E9todo\ para\ eliminar\ un\ producto\ del\ deposito\r\n\ \r\n\ @param\ producto\ \ El\ producto\ a\ eliminar\r\n
comment6.params=codigo
comment6.target=Modelo.Productos.ProductoBase\ buscarCodigo(java.lang.String)
comment6.text=\r\n\ Busca\ un\ producto\ en\ el\ deposito\ por\ su\ C\u00D3DIGO\r\n\ \r\n\ @param\ \ \ codigo\ \ El\ c\u00F3digo\ del\ producto\ a\ buscar\r\n\ \r\n\ @return\ \ ProductoBase\ El\ producto\ que\ corresponda\ con\ dicho\ c\u00F3digo\ o\ null\ si\ el\ codigo\ no\ se\ corresponde\ con\ nigun\ producto\r\n
comment7.params=codigo
comment7.target=boolean\ existeProducto(java.lang.String)
comment7.text=\r\n\ Comprueba\ que\ existe\ un\ producto\ en\ el\ deposito\ mediante\ su\ codigo\r\n\ \r\n\ @param\ \ \ codigo\ \ El\ c\u00F3digo\ del\ producto\ a\ buscar\r\n\ \r\n\ @return\ \ boolean\ true\ si\ el\ producto\ existe\ en\ el\ deposito,\ false\ en\ caso\ contrario\r\n
comment8.params=nombre
comment8.target=boolean\ existeNombre(java.lang.String)
comment8.text=\r\n\ Comprueba\ que\ exiten\ productos\ con\ el\ nombre\ pasado\ como\ parametro\r\n\ \r\n\ @param\ nombre\ \ \ \ El\ nombre\ que\ se\ desea\ buscar\r\n\ \r\n\ @return\ true\ si\ existe\ algun\ producto\ con\ el\ mismo\ nombre/marca/modelo,\ false\ en\ caso\ contrario\r\n
comment9.params=buscarCadena
comment9.target=ContenedorProductos\ buscarNombre(java.lang.String)
comment9.text=\r\n\ Busca\ un\ producto\ en\ el\ deposito\ por\ su\ NOMBRE,\ MARCA\ O\ MODELO\ y\ devuelve\ todos\ los\ productos\ que\ hayan\ tenido\ coincidiencias.\r\n\ \r\n\ Para\ que\ una\ busqueda\ tenga\ \u00E9xito,\ todas\ y\ cada\ una\ de\ las\ palabras\ introducidas\ deben\ aparecer\ en\ el\ nombre,\ marca\ o\ modelo.\r\n\ \r\n\ @param\ \ \ buscarCadena\ \ El\ String\ que\ se\ utilizar\u00E1\ como\ criterio\ de\ busqueda\r\n\ \r\n\ @return\ \ Un\ ContenedorProductos\ con\ todos\ los\ productos\ que\ hallan\ tenido\ coincidencia,\ null\ si\ no\ se\ ha\ encontrado\ ning\u00FAn\ producto.\r\n
numComments=14
